/***********************************************************************//**
	@file
***************************************************************************/
#include "fk/render/ShaderProgram.hpp"

namespace fk {
namespace render {
/***********************************************************************//**
	@brief コンストラクタ
***************************************************************************/
ShaderProgram::ShaderProgram()
  : id_(glCreateProgram())
{
}
/***********************************************************************//**
	@brief デストラクタ
***************************************************************************/
ShaderProgram::~ShaderProgram() {
  glDeleteProgram(id_);
}
/***********************************************************************//**
	@brief 
***************************************************************************/
ShaderProgram& ShaderProgram::attach(const ShaderPtr& shader) {
  FK_ASSERT(!isLink());
  shaders_[size_t(shader->getType())] = shader;
  glAttachShader(id_, shader->getId());
  return *this;
}
/***********************************************************************//**
	@brief 
***************************************************************************/
ShaderProgram& ShaderProgram::link() {
  setLink(true);
  glLinkProgram(id_);
  return *this;
}
/***********************************************************************//**
	@brief 
***************************************************************************/
ShaderProgram& ShaderProgram::use() {
  FK_ASSERT(!isUse());
  setUse(true);
  glUseProgram(id_);
  return *this;
}
/***********************************************************************//**
	@brief 
***************************************************************************/
ShaderProgram& ShaderProgram::unuse() {
  FK_ASSERT(isUse());
  setUse(false);
  glUseProgram(0);
  return *this;
}
/***********************************************************************//**
	$Id$
***************************************************************************/
}
}
