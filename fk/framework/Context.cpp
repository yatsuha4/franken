/***********************************************************************//**
	@file
***************************************************************************/
#include "fk/framework/Context.hpp"
#include "fk/render/Renderer.hpp"

namespace fk {
namespace framework {
/***********************************************************************//**
	@brief コンストラクタ
***************************************************************************/
Context::Context()
  : super(nullptr)
{
}
/***********************************************************************//**
	@brief デストラクタ
***************************************************************************/
Context::~Context() {
}
/***********************************************************************//**
	@brief 
***************************************************************************/
void Context::render(const IRect& viewport, const RenderParam& param) {
  if(!renderer_) {
    renderer_ = createRenderer();
  }
  renderer_->beginRender(viewport);
  super::render(*renderer_, param);
  renderer_->endRender();
}
/***********************************************************************//**
	@brief 
***************************************************************************/
RendererPtr Context::createRenderer() {
  return std::make_shared<Renderer>
    (std::static_pointer_cast<Context>(shared_from_this()));
}
/***********************************************************************//**
	$Id$
***************************************************************************/
}
}
